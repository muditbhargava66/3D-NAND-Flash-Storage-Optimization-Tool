[tox]
min_version = 4.6.0
env_list = 
    py39
    py310
    py311
    py312
    py313
    lint
    type
isolated_build = True   # PEP 517 support

[testenv]
description = Run the tests with pytest
deps =
    PyQt5>=5.15.9
    pytest>=7.3.1
    pytest-cov>=4.1.0
    methodtools>=0.4.7
    ruff
commands =
    ruff check --ignore W293 src tests  # Add ignore flag here too # linting too
    pytest {posargs:tests}

; [testenv:lint]
; description = Run linting tools
; skip_install = true
; deps =
;     black>=23.3.0
;     flake8>=6.0.0
;     isort>=5.12.0
; commands =
;     black --check src tests scripts
;     flake8 src tests scripts
;     isort --check-only --profile black src tests scripts

[testenv:format]
description = Format code with Black and isort
skip_install = true
deps =
    black>=23.3.0
    isort>=5.12.0
commands =
    black src tests scripts
    isort src tests scripts

[testenv:docs]
description = Build documentation
skip_install = true
deps =
    mkdocs>=1.4.2
    mkdocs-material>=9.1.6
commands =
    mkdocs build

[testenv:check]
description = Run all checks (lint, type, test)
deps =
    {[testenv]deps}
    {[testenv:lint]deps}
    {[testenv:type]deps}
commands =
    {[testenv:lint]commands}
    {[testenv:type]commands}
    {[testenv]commands}

[coverage:run]
source = src

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError

[ruff]
line-length = 160
target-version = py312
ignore = ["W293", "W291", "F841", "N803", "N806", "B904", "B017", "C901", "E402", "E722", "F401", "N802", "I001"]
select = E,F,W,C90
exclude = \
    .git,\
    __pycache__,\
    venv,\
    env,\
    .venv,\
    .env,\
    build,\
    dist